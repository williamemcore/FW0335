<?xml version="1.0" ?>
<synergyModuleDescription>  
    <config id="config.driver.jpeg_decode" path="ssp_cfg/driver/r_jpeg_decode_cfg.h" version="0">
        <property default="config.driver.jpeg_decode.param_checking_enable.bsp" display="Parameter Checking" id="config.driver.jpeg_decode.param_checking_enable">
            <option display="Default (BSP)" id="config.driver.jpeg_decode.param_checking_enable.bsp" value="(BSP_CFG_PARAM_CHECKING_ENABLE)"/>
            <option display="Enabled" id="config.driver.jpeg_decode.param_checking_enable.enabled" value="(1)"/>
            <option display="Disabled" id="config.driver.jpeg_decode.param_checking_enable.disabled" value="(0)"/>
        </property>
        <content>
            #define JPEG_DECODE_CFG_PARAM_CHECKING_ENABLE ${config.driver.jpeg_decode.param_checking_enable}
        </content>
    </config>
    <module config="config.driver.jpeg_decode" display="Driver|Graphics|${module.driver.jpeg_decode.name} JPEG Decode Driver on r_jpeg" id="module.driver.jpeg_decode" version="1">
        <constraint display="Module instances must have unique names">
            "${interface.driver.jpeg_decode.${module.driver.jpeg_decode.name}}" === "1"
        </constraint>
        <constraint display="Requires JPEG compression/decompression process interrupt (JEDI) enabled">
            "${board.icu.jpeg.jedi}" != "board.icu.common.irq.disabled"
        </constraint>
        <constraint display="Requires JPEG data transfer interrupt request interrupt (JDTI) enabled">
            "${board.icu.jpeg.jdti}" != "board.icu.common.irq.disabled"
        </constraint>
        <provides interface="interface.driver.jpeg_decode" />
        <provides interface="interface.driver.jpeg_decode_on_jpeg_decode" />
        <provides interface="interface.driver.jpeg_decode.${module.driver.jpeg_decode.name}" />
        <property id="module.driver.jpeg_decode.name" display="Name" default="g_jpeg_decode${_instance}">
            <constraint display="Name must be a valid C symbol">testSymbol("${module.driver.jpeg_decode.name}")</constraint>
        </property>
        <property id="module.driver.jpeg_decode.input_data_format" display="Byte Order for Input Data Format" default="module.driver.jpeg_decode.input_data_format.normal">
            <option id="module.driver.jpeg_decode.input_data_format.normal"    display="Normal byte order (1)(2)(3)(4)(5)(6)(7)(8)" value="JPEG_DECODE_DATA_FORMAT_NORMAL" />
            <option id="module.driver.jpeg_decode.input_data_format.b_swap"    display="Byte Swap (2)(1)(4)(3)(6)(5)(8)(7)" value="JPEG_DECODE_DATA_FORMAT_BYTE_SWAP" />
            <option id="module.driver.jpeg_decode.input_data_format.w_swap"    display="Word Swap (3)(4)(1)(2)(7)(8)(5)(6)" value="JPEG_DECODE_DATA_FORMAT_WORD_SWAP" />
            <option id="module.driver.jpeg_decode.input_data_format.wb_swap"   display="Word-Byte Swap (4)(3)(2)(1)(8)(7)(6)(5)" value="JPEG_DECODE_DATA_FORMAT_WORD_BYTE_SWAP" />
            <option id="module.driver.jpeg_decode.input_data_format.lw_swap"   display="Longword Swap (5)(6)(7)(8)(1)(2)(3)(4)" value="JPEG_DECODE_DATA_FORMAT_LONGWORD_SWAP" />
            <option id="module.driver.jpeg_decode.input_data_format.lwb_swap"  display="Longword-Byte Swap (6)(5)(8)(7)(2)(1)(4)(3)" value="JPEG_DECODE_DATA_FORMAT_LONGWORD_BYTE_SWAP" />
            <option id="module.driver.jpeg_decode.input_data_format.lww_swap"  display="Longword-Word Swap (7)(8)(5)(6)(3)(4)(1)(2)" value="JPEG_DECODE_DATA_FORMAT_LONGWORD_WORD_SWAP" />
            <option id="module.driver.jpeg_decode.input_data_format.lwwb_swap" display="Longword-Word-Byte Swap (8)(7)(6)(5)(4)(3)(2)(1)" value="JPEG_DECODE_DATA_FORMAT_LONGWORD_WORD_BYTE_SWAP" />
        </property>
        <property id="module.driver.jpeg_decode.output_data_format" display="Byte Order for Output Data Format" default="module.driver.jpeg_decode.output_data_format.normal">
            <option id="module.driver.jpeg_decode.output_data_format.normal" display="Normal byte order (1)(2)(3)(4)(5)(6)(7)(8)" value="JPEG_DECODE_DATA_FORMAT_NORMAL" />
            <option id="module.driver.jpeg_decode.output_data_format.b_swap" display="Byte Swap (2)(1)(4)(3)(6)(5)(8)(7)" value="JPEG_DECODE_DATA_FORMAT_BYTE_SWAP" />
            <option id="module.driver.jpeg_decode.output_data_format.w_swap" display="Word Swap (3)(4)(1)(2)(7)(8)(5)(6)" value="JPEG_DECODE_DATA_FORMAT_WORD_SWAP" />
            <option id="module.driver.jpeg_decode.output_data_format.wb_swap" display="Word-Byte Swap (4)(3)(2)(1)(8)(7)(6)(5)" value="JPEG_DECODE_DATA_FORMAT_WORD_BYTE_SWAP" />
            <option id="module.driver.jpeg_decode.output_data_format.lw_swap" display="Longword Swap (5)(6)(7)(8)(1)(2)(3)(4)" value="JPEG_DECODE_DATA_FORMAT_LONGWORD_SWAP" />
            <option id="module.driver.jpeg_decode.output_data_format.lwb_swap" display="Longword-Byte Swap (6)(5)(8)(7)(2)(1)(4)(3)" value="JPEG_DECODE_DATA_FORMAT_LONGWORD_BYTE_SWAP" />
            <option id="module.driver.jpeg_decode.output_data_format.lww_swap" display="Longword-Word Swap (7)(8)(5)(6)(3)(4)(1)(2)" value="JPEG_DECODE_DATA_FORMAT_LONGWORD_WORD_SWAP" />
            <option id="module.driver.jpeg_decode.output_data_format.lwwb_swap" display="Longword-Word-Byte Swap (8)(7)(6)(5)(4)(3)(2)(1)" value="JPEG_DECODE_DATA_FORMAT_LONGWORD_WORD_BYTE_SWAP" />
        </property>
        <property id="module.driver.jpeg_decode.pixel_format" display="Output Data Color Format" default="module.driver.jpeg_decode.pixel_format.rgb565">
            <option id="module.driver.jpeg_decode.pixel_format.argb8888" display="Pixel Data ARGBB888 format" value="JPEG_DECODE_PIXEL_FORMAT_ARGB8888" />
            <option id="module.driver.jpeg_decode.pixel_format.rgb565"   display="Pixel Data RGB565 format"   value="JPEG_DECODE_PIXEL_FORMAT_RGB565" />
        </property>
        <property id="module.driver.jpeg_decode.alpha_value"  display="Alpha value to be applied to decoded pixel data(only valid for ARGB8888 format)" default="255">
            <constraint display="Value must be an integer greater than or equal to 0 and less than or equal to 255"> testInteger("${module.driver.jpeg_decode.alpha_value}") &amp;&amp; ("${module.driver.jpeg_decode.alpha_value}" &gt;= 0) &amp;&amp; ("${module.driver.jpeg_decode.alpha_value}" &lt;= 255)
            </constraint>
        </property>
        <property default="NULL" display="Name of user callback function" id="module.driver.jpeg_decode.p_callback">
            <constraint display="Name must be a valid C symbol">testSymbol("${module.driver.jpeg_decode.p_callback}")</constraint>
        </property>
        <interrupt node="board.icu.jpeg.jedi" />
        <interrupt node="board.icu.jpeg.jdti" />
        <header>
extern const jpeg_decode_instance_t ${module.driver.jpeg_decode.name};
extern const jpeg_decode_cfg_t  ${module.driver.jpeg_decode.name}_cfg;
#ifdef ${module.driver.jpeg_decode.p_callback}
#define JPEG_DECODE_CALLBACK_USED_${module.driver.jpeg_decode.name} (0)
#else
#define JPEG_DECODE_CALLBACK_USED_${module.driver.jpeg_decode.name} (1)
#endif
#if JPEG_DECODE_CALLBACK_USED_${module.driver.jpeg_decode.name}
void ${module.driver.jpeg_decode.p_callback}(jpeg_decode_callback_args_t * p_args);
#endif
        </header>
        <includes>
#include &quot;r_jpeg_decode.h&quot;
        </includes>
        <declarations>
#if JPEG_DECODE_CALLBACK_USED_${module.driver.jpeg_decode.name}
#if defined(__ICCARM__)
#define ${module.driver.jpeg_decode.p_callback}_WEAK_ATTRIBUTE
#pragma weak ${module.driver.jpeg_decode.p_callback} = ${module.driver.jpeg_decode.p_callback}_internal
#elif defined(__GNUC__)
#define ${module.driver.jpeg_decode.p_callback}_WEAK_ATTRIBUTE __attribute__ ((weak, alias("${module.driver.jpeg_decode.p_callback}_internal")))
#endif
void ${module.driver.jpeg_decode.p_callback}(jpeg_decode_callback_args_t * p_args) ${module.driver.jpeg_decode.p_callback}_WEAK_ATTRIBUTE;
#endif

static jpeg_decode_ctrl_t ${module.driver.jpeg_decode.name}_ctrl;
const jpeg_decode_cfg_t  ${module.driver.jpeg_decode.name}_cfg = {
    .input_data_format  = ${module.driver.jpeg_decode.input_data_format},
    .output_data_format = ${module.driver.jpeg_decode.output_data_format},
    .pixel_format       = ${module.driver.jpeg_decode.pixel_format},
    .alpha_value        = ${module.driver.jpeg_decode.alpha_value},
    .p_callback         = ${module.driver.jpeg_decode.p_callback},
};
const jpeg_decode_instance_t ${module.driver.jpeg_decode.name} = {
    .p_api  = (jpeg_decode_api_t const *)&amp;g_jpeg_decode_on_jpeg_decode,
    .p_ctrl = &amp;${module.driver.jpeg_decode.name}_ctrl,
    .p_cfg  = &amp;${module.driver.jpeg_decode.name}_cfg
};

#if JPEG_DECODE_CALLBACK_USED_${module.driver.jpeg_decode.name}
/*******************************************************************************************************************//**
 * @brief      This is a weak example callback function for JPEG Decode HAL Driver. It should be overridden by defining
 *             a user callback function with the prototype below.
 *               - void ${module.driver.jpeg_decode.p_callback}(jpeg_decode_callback_args_t * p_args)
 *
 * @param[in]  p_args  Callback arguments used to identify what caused the callback.
 **********************************************************************************************************************/
void ${module.driver.jpeg_decode.p_callback}_internal(jpeg_decode_callback_args_t * p_args)
{
    /** Do nothing. */
}
#endif
        </declarations>
    </module>
</synergyModuleDescription>
