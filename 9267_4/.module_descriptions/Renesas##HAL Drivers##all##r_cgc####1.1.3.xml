<?xml version="1.0" ?>
<synergyModuleDescription>
	<config id="config.driver.cgc" path="ssp_cfg/driver/r_cgc_cfg.h" version="0">
		<property default="config.driver.cgc.param_checking_enable.bsp" display="Parameter Checking" id="config.driver.cgc.param_checking_enable">
			<option display="Default (BSP)" id="config.driver.cgc.param_checking_enable.bsp" value="(BSP_CFG_PARAM_CHECKING_ENABLE)"/>
			<option display="Enabled" id="config.driver.cgc.param_checking_enable.enabled" value="(1)"/>
			<option display="Disabled" id="config.driver.cgc.param_checking_enable.disabled" value="(0)"/>
		</property>
		<property default="config.driver.cgc.main_osc_wait.wait_8163" display="Main Oscillator Wait Time" id="config.driver.cgc.main_osc_wait">
			<option display="3 cycles" id="config.driver.cgc.main_osc_wait.wait_3" value="(0)"/>
			<option display="35 cycles" id="config.driver.cgc.main_osc_wait.wait_35" value="(1)"/>
			<option display="67 cycles" id="config.driver.cgc.main_osc_wait.wait_67" value="(2)"/>
			<option display="131 cycles" id="config.driver.cgc.main_osc_wait.wait_131" value="(3)"/>
			<option display="259 cycles" id="config.driver.cgc.main_osc_wait.wait_259" value="(4)"/>
			<option display="547 cycles" id="config.driver.cgc.main_osc_wait.wait_547" value="(5)"/>
			<option display="1059 cycles" id="config.driver.cgc.main_osc_wait.wait_1059" value="(6)"/>
			<option display="2147 cycles" id="config.driver.cgc.main_osc_wait.wait_2147" value="(7)"/>
			<option display="4291 cycles" id="config.driver.cgc.main_osc_wait.wait_4291" value="(8)"/>
			<option display="8163 cycles" id="config.driver.cgc.main_osc_wait.wait_8163" value="(9)"/>
		</property>
		<property default="config.driver.cgc.main_osc_clock_source.crystal" display="Main Oscillator Clock Source" id="config.driver.cgc.main_osc_clock_source">
			<option display="External Oscillator" id="config.driver.cgc.main_osc_clock_source.external_osc" value="(1)"/>
			<option display="Crystal or Resonator" id="config.driver.cgc.main_osc_clock_source.crystal" value="(0)"/>
		</property>
		<property default="config.driver.cgc.osc_stop_det_used.enabled" display="Oscillator Stop Detect" id="config.driver.cgc.osc_stop_det_used">
			<option display="Enabled" id="config.driver.cgc.osc_stop_det_used.enabled" value="(1)"/>
			<option display="Disabled" id="config.driver.cgc.osc_stop_det_used.disabled" value="(0)"/>
		</property>
		<property default="config.driver.cgc.subclock_drive.standard" display="Subclock Drive" id="config.driver.cgc.subclock_drive">
			<option display="Middle (4.4pf)" id="config.driver.cgc.subclock_drive.middle" value="(1)"/>
			<option display="Standard (12.5pf)" id="config.driver.cgc.subclock_drive.standard" value="(0)"/>
		</property>
		<content>
#define CGC_CFG_MAIN_OSC_WAIT ${config.driver.cgc.main_osc_wait}
#define CGC_CFG_MAIN_OSC_CLOCK_SOURCE ${config.driver.cgc.main_osc_clock_source}
#define CGC_CFG_OSC_STOP_DET_USED ${config.driver.cgc.osc_stop_det_used}
#define CGC_CFG_PARAM_CHECKING_ENABLE ${config.driver.cgc.param_checking_enable}
#define CGC_CFG_SUBCLOCK_DRIVE ${config.driver.cgc.subclock_drive}
		</content>
	</config>
	<module config="config.driver.cgc" display="Driver|System|${module.driver.cgc.name} CGC Driver on r_cgc" id="module.driver.cgc_on_cgc" version="1">			    		
        <constraint display="Only one CGC driver instance is allowed">
            "${interface.driver.cgc}" === "1"
        </constraint>
        <requires interface="_hal" />
        <provides interface="interface.driver.cgc" />
        <property default="g_cgc" display="Name [Fixed]" id="module.driver.cgc.name">
            <constraint display="Name must be g_cgc">"${module.driver.cgc.name}" == "g_cgc"</constraint>
        </property>
        <header>
        /** CGC Instance */
        extern const cgc_instance_t ${module.driver.cgc.name};
        </header>
        <includes>
        #include &quot;r_cgc.h&quot;
        #include &quot;r_cgc_api.h&quot;
        </includes>
        <declarations>
        const cgc_instance_t ${module.driver.cgc.name} = {
            .p_api = &amp;g_cgc_on_cgc,
            .p_cfg = NULL
        };
        </declarations>
    </module> 

</synergyModuleDescription>
